import os
import telegram
import asyncio
import feedparser
import google.generativeai as genai
import time

print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

# --- 1. –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
# –ß–∏—Ç–∞–µ–º "—Å–µ–∫—Ä–µ—Ç—ã" –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è. –ù–∞ Render –º—ã –∏—Ö —É–∫–∞–∂–µ–º –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.
try:
    TELEGRAM_BOT_TOKEN = os.environ['TELEGRAM_BOT_TOKEN']
    TELEGRAM_CHANNEL_ID = os.environ['TELEGRAM_CHANNEL_ID']
    GEMINI_API_KEY = os.environ['GEMINI_API_KEY']
except KeyError as e:
    print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è {e}.")
    print("–ü—Ä–∏ –ª–æ–∫–∞–ª—å–Ω–æ–º –∑–∞–ø—É—Å–∫–µ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —Ñ–∞–π–ª .env –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω—ã —Å–∏—Å—Ç–µ–º–Ω–æ.")
    exit() # –í—ã—Ö–æ–¥–∏–º, –µ—Å–ª–∏ –∫–ª—é—á–µ–π –Ω–µ—Ç

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ Gemini API
genai.configure(api_key=GEMINI_API_KEY)
model = genai.GenerativeModel('gemini-1.5-pro-latest')

# –°–ø–∏—Å–æ–∫ RSS-–ª–µ–Ω—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
RSS_FEEDS = {
    '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã': 'https://cointelegraph.com/rss',
    '–≠–∫–æ–Ω–æ–º–∏–∫–∞': 'https://feeds.reuters.com/reuters/businessNews',
    'ForkLog': 'https://forklog.com/feed'
}

# –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è URL —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–µ–π.
# –ü—Ä–∏ –∫–∞–∂–¥–æ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ–Ω–æ –±—É–¥–µ—Ç –æ–±–Ω—É–ª—è—Ç—å—Å—è.
# –î–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∞–π–ª –∏–ª–∏ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö SQLite.
posted_urls = set()

# --- 2. –û—Å–Ω–æ–≤–Ω—ã–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---

async def summarize_with_ai(title, summary):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ—Å—Ç—å –≤ Gemini –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print(f"ü§ñ –û—Ç–ø—Ä–∞–≤–ª—è—é –Ω–∞ –∞–Ω–∞–ª–∏–∑: {title}")
    prompt = f"""
    –¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä Telegram-–∫–∞–Ω–∞–ª–∞ –æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö –∏ —ç–∫–æ–Ω–æ–º–∏–∫–µ.
    –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –Ω–æ–≤–æ—Å—Ç—å –∏ –≤–µ—Ä–Ω–∏ –∫—Ä–∞—Ç–∫—É—é, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤—ã–∂–∏–º–∫—É –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
    –¢–≤–æ–π –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¢–û–õ–¨–ö–û –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:

    **{title}**

    *(–ó–¥–µ—Å—å –∫—Ä–∞—Ç–∫–∞—è —Å—É—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –≤ 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö)*

    **–ö–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã:**
    - –ü–µ—Ä–≤—ã–π –≤–∞–∂–Ω—ã–π —Ç–µ–∑–∏—Å.
    - –í—Ç–æ—Ä–æ–π –≤–∞–∂–Ω—ã–π —Ç–µ–∑–∏—Å.
    - –¢—Ä–µ—Ç–∏–π –≤–∞–∂–Ω—ã–π —Ç–µ–∑–∏—Å.

    #—Ö—ç—à—Ç–µ–≥1 #—Ö—ç—à—Ç–µ–≥2 #—Ö—ç—à—Ç–µ–≥3
    """
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≤—ã–∑–æ–≤ –∫ –º–æ–¥–µ–ª–∏
        response = await model.generate_content_async(prompt)
        return response.text
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Gemini API: {e}")
        return None

async def send_message_to_channel(bot, message, link):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram-–∫–∞–Ω–∞–ª."""
    # –î–æ–±–∞–≤–ª—è–µ–º –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –æ—Ç AI —Å—Å—ã–ª–∫—É –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫
    full_message = f"{message}\n\nüîó [–ß–∏—Ç–∞—Ç—å –ø–µ—Ä–≤–æ–∏—Å—Ç–æ—á–Ω–∏–∫]({link})"
    try:
        await bot.send_message(
            chat_id=TELEGRAM_CHANNEL_ID,
            text=full_message,
            parse_mode='Markdown',
            disable_web_page_preview=True # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–≤—å—é —Å—Å—ã–ª–∫–∏, —á—Ç–æ–±—ã –ø–æ—Å—Ç –≤—ã–≥–ª—è–¥–µ–ª —á–∏—â–µ
        )
        print(f"‚úÖ –ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –≤ –∫–∞–Ω–∞–ª–µ.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {e}")

# --- 3. –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã ---

async def main_loop():
    """–ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏ –∏ –ø—É–±–ª–∏–∫—É–µ—Ç –∏—Ö."""
    bot = telegram.Bot(token=TELEGRAM_BOT_TOKEN)
    print("–ë–æ—Ç –≤ —Ä–∞–±–æ—á–µ–º —Ä–µ–∂–∏–º–µ. –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π...")
    while True:
        print(f"\n--- –ù–æ–≤–∞—è –∏—Ç–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {time.ctime()} ---")
        for category, url in RSS_FEEDS.items():
            print(f"–ü—Ä–æ–≤–µ—Ä—è—é RSS-–ª–µ–Ω—Ç—É: {category}")
            feed = feedparser.parse(url)

            for entry in reversed(feed.entries):
                if entry.link not in posted_urls:
                    print(f"üîç –ù–∞–π–¥–µ–Ω–∞ –Ω–æ–≤–∞—è —Å—Ç–∞—Ç—å—è: {entry.title}")

                    formatted_post = await summarize_with_ai(entry.title, entry.summary)

                    if formatted_post:
                        await send_message_to_channel(bot, formatted_post, entry.link)
                        posted_urls.add(entry.link)
                    else:
                        print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å, –ø—Ä–æ–ø—É—Å–∫–∞—é.")

                    # !!! –í–û–¢ –í–ê–ñ–ù–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï !!!
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –ø–∞—É–∑—É –≤ 5 —Å–µ–∫—É–Ω–¥ –ü–û–°–õ–ï –ö–ê–ñ–î–û–ô –Ω–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏,
                    # —á—Ç–æ–±—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—Ä–µ–≤—ã—à–∞—Ç—å –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É.
                    await asyncio.sleep(5)

        print("--- –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –ª–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–ª–µ–¥—É—é—â–∞—è —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç. ---")
        await asyncio.sleep(1800) # 30 –º–∏–Ω—É—Ç

if __name__ == '__main__':
    try:
        asyncio.run(main_loop())
    except (KeyboardInterrupt, SystemExit):
        print("\n–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")